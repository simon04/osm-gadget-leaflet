{"version":3,"file":"index.d66f5992.js","sources":["../../vite/modulepreload-polyfill","../../src/layer.mediawiki.ts","../../src/layer.wiwosm.ts","../../src/state.ts","../../src/index.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import * as L from 'leaflet';\nimport getFilePath from 'wikimedia-commons-file-path/build/wikimedia-commons-file-path';\n\ninterface Options extends L.GeoJSONOptions {\n  url: string;\n  gsnamespace: number;\n  icon: L.IconOptions;\n  iconThumbnail: boolean;\n  thumbnailWidth: number;\n}\n\nexport interface GeosearchFeature {\n  pageid: number;\n  ns: number;\n  title: string;\n  lat: number;\n  lon: number;\n  dist: number;\n  primary: string;\n  type: 'camera';\n  name: null;\n}\n\ninterface FeatureProperties {\n  title: string;\n  wikipediaUrl: string;\n  thumbnail?: (width: number) => string;\n}\n\nexport default class MediaWiki extends L.GeoJSON {\n  constructor(options: Partial<Options>) {\n    super(undefined, options);\n    L.Util.setOptions(this, {\n      ...options,\n      pointToLayer: options.iconThumbnail\n        ? this.pointToThumbnailLayer.bind(this)\n        : this.pointToIconLayer.bind(this),\n    });\n    if (!this.options.iconThumbnail && !this.options.icon) {\n      throw new Error('Either iconThumbnail or icon is needed!');\n    }\n  }\n\n  options: Options = {\n    url: undefined,\n    gsnamespace: 0,\n    icon: undefined,\n    iconThumbnail: false,\n    thumbnailWidth: 320,\n  };\n\n  onAdd(map: L.Map): this {\n    super.onAdd(map);\n    map.on('zoomend moveend', this.updateMarks, this);\n    this.updateMarks();\n    return this;\n  }\n  onRemove(map: L.Map): this {\n    super.onRemove(map);\n    map.off('zoomend moveend', this.updateMarks, this);\n    return this;\n  }\n\n  pointToThumbnailLayer(\n    feature: GeoJSON.Feature<GeoJSON.Point, FeatureProperties>,\n    latlng: L.LatLng\n  ): L.Marker {\n    const zoom = this._map.getZoom();\n    const width = zoom > 20 ? 320 : zoom > 18 ? 240 : zoom > 16 ? 120 : 60;\n    const iconUrl = feature.properties.thumbnail(320);\n    if (!iconUrl) return;\n    const icon = L.icon({\n      iconUrl,\n      iconAnchor: [width / 2, 0],\n      iconSize: [width, undefined],\n    });\n    const marker = L.marker(latlng, {\n      icon: icon,\n      title: feature.properties.title,\n    });\n    if (feature.properties.wikipediaUrl) {\n      marker.on('click', () => window.open(feature.properties.wikipediaUrl));\n      marker.on('mouseover', (event) => {\n        const icon = event.target._icon as HTMLImageElement;\n        icon.setAttribute('zIndexOld', icon.style.zIndex);\n        icon.style.zIndex = '987654';\n      });\n      marker.on('mouseout', (event) => {\n        const icon = event.target._icon as HTMLImageElement;\n        icon.style.zIndex = icon.getAttribute('zIndexOld');\n      });\n    }\n    return marker;\n  }\n\n  pointToIconLayer(\n    feature: GeoJSON.Feature<GeoJSON.Point, FeatureProperties>,\n    latlng: L.LatLng\n  ): L.Marker {\n    const icon = L.icon(this.options.icon);\n    const marker = L.marker(latlng, {\n      icon: icon,\n      title: feature.properties.title,\n    });\n    const popup = getPopupHtml.call(this, feature);\n    if (popup) {\n      marker.bindPopup(popup, {\n        minWidth: 200,\n      });\n      marker.on('click', function () {\n        this.openPopup();\n        this.openedViaMouseOver = false;\n      });\n      marker.on('mouseover', function () {\n        this.openPopup();\n        this.openedViaMouseOver = true;\n      });\n      marker.on('mouseout', function () {\n        if (this.openedViaMouseOver) {\n          this.closePopup();\n        }\n      });\n    }\n    return marker;\n\n    function getPopupHtml(\n      feature: GeoJSON.Feature<GeoJSON.Geometry, FeatureProperties>\n    ) {\n      let html;\n      if (feature.properties.title && feature.properties.wikipediaUrl) {\n        html = L.Util.template(\n          '<a href=\"{wikipediaUrl}\" target=\"_blank\">{title}</a>',\n          feature.properties\n        );\n        if (feature.properties.thumbnail) {\n          const { thumbnailWidth } = this.options;\n          const thumbnail = feature.properties.thumbnail(thumbnailWidth);\n          html += L.Util.template(\n            '<p><img src=\"{thumbnail}\" width=\"{thumbnailWidth}\"></p>',\n            { thumbnail, thumbnailWidth }\n          );\n        }\n      }\n      return html;\n    }\n  }\n\n  updateMarks(): this {\n    if (!this._map) {\n      return;\n    }\n    const bounds = this._map.getBounds();\n    let url = this.options.url + '/w/api.php';\n    url += L.Util.getParamString({\n      origin: '*',\n      format: 'json',\n      action: 'query',\n      list: 'geosearch',\n      gsnamespace: this.options.gsnamespace,\n      gslimit: 500,\n      gsprop: 'type|name',\n      gsbbox: [\n        bounds.getNorth(),\n        bounds.getWest(),\n        bounds.getSouth(),\n        bounds.getEast(),\n      ].join('|'),\n    });\n\n    const xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', updateLayer.bind(this));\n    xhr.open('GET', url);\n    xhr.send();\n    return this;\n\n    function updateLayer() {\n      if (xhr.status !== 200 || !xhr.responseText) {\n        return;\n      }\n      const json = JSON.parse(xhr.responseText);\n      if (json.error || !json.query.geosearch) {\n        console.warn(json.error);\n        return;\n      }\n      const geosearch = json.query.geosearch as GeosearchFeature[];\n      const geojson = geosearch.map(toFeature, this);\n      this.clearLayers();\n      this.addData(geojson);\n    }\n\n    function toFeature(\n      object: GeosearchFeature\n    ): GeoJSON.Feature<GeoJSON.Point, FeatureProperties> {\n      return {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [object.lon, object.lat],\n        },\n        properties: {\n          title: object.title,\n          wikipediaUrl: this.options.url + '/wiki/' + object.title,\n          thumbnail: object.title.match(/^File:/)\n            ? (width) => getFilePath(object.title, width)\n            : undefined,\n        },\n      };\n    }\n  }\n}\n","import * as L from 'leaflet';\n\ninterface Options extends L.GeoJSONOptions {\n  article?: string | string[];\n  lang?: string;\n  coordsToLatLng(coords: L.LatLngTuple): L.LatLng;\n  pointToLayer(feature: GeoJSON.Feature, latlng: L.LatLng): L.CircleMarker;\n}\n\nexport default class WIWOSK extends L.GeoJSON {\n  options: Options = {\n    coordsToLatLng(coords: L.LatLngTuple) {\n      // unproject EPSG:3857\n      const pt = L.point(coords[0], coords[1]);\n      const ll = L.Projection.SphericalMercator.unproject(pt);\n      return ll;\n    },\n\n    pointToLayer(feature: GeoJSON.Feature, latlng: L.LatLng) {\n      return L.circleMarker(latlng);\n    },\n  };\n\n  constructor(options: Partial<Options>) {\n    super(undefined, options);\n    L.Util.setOptions(this, options);\n  }\n\n  loadWIWOSM(): this {\n    if (!this.options.article || !this.options.lang) {\n      return;\n    } else if (typeof this.options.article === 'object') {\n      this.clearLayers();\n      this.options.article.map((a) => this.loadArticle(a));\n    } else {\n      this.loadArticle(this.options.article, true);\n    }\n    return this;\n  }\n\n  private loadArticle(article: string, doClear = false) {\n    let url = 'https://tools.wmflabs.org/wiwosm/osmjson/getGeoJSON.php';\n    url += L.Util.getParamString({\n      lang: this.options.lang,\n      article: article,\n    });\n    const xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', () => {\n      if (xhr.status !== 200 || !xhr.responseText) {\n        return;\n      }\n      const geojson = JSON.parse(xhr.responseText);\n      if (doClear) {\n        this.clearLayers();\n      }\n      this.addData(geojson);\n      this._map.fitBounds(this.getBounds());\n    });\n    xhr.open('GET', url);\n    xhr.send();\n  }\n}\n","import { Map } from 'leaflet';\n\nexport function getQuery(): URLSearchParams {\n  return new URLSearchParams((location.hash || '').substring(2));\n}\n\nexport function setMapView(map: Map): void {\n  const query = getQuery();\n  if (query.has('lat') && query.has('lon')) {\n    map.setView(\n      [+query.get('lat'), +query.get('lon')],\n      +query.get('zoom') || 9\n    );\n  } else {\n    const centerString = window.localStorage\n      ? window.localStorage.getItem('mapCenter')\n      : undefined;\n    let init = false;\n    if (typeof centerString === 'string') {\n      try {\n        const center = JSON.parse(centerString);\n        map.setView(center, center.zoom);\n        init = true;\n      } catch (e) {\n        // ignore\n      }\n    }\n    if (!init) {\n      map.setView({ lat: 47.3, lng: 11.3 }, 9);\n    }\n  }\n}\n\nexport function saveMapView(): void {\n  if (!window.localStorage) {\n    return;\n  }\n  const mapCenter = {\n    lat: this.getCenter().lat,\n    lng: this.getCenter().lng,\n    zoom: this.getZoom(),\n  };\n  window.localStorage.setItem('mapCenter', JSON.stringify(mapCenter));\n}\n","'use strict';\n\nimport * as L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { Geocoder as GeocoderControl } from 'leaflet-control-geocoder';\nimport 'leaflet-control-geocoder/dist/Control.Geocoder.css';\n\nimport './style.css';\nimport { default as Mediawiki } from './layer.mediawiki';\nimport { default as WIWOSM } from './layer.wiwosm';\nimport * as state from './state';\nconst query = state.getQuery();\n\n// https://github.com/Leaflet/Leaflet/issues/4968#issuecomment-269750768\nimport iconRetinaUrl from 'leaflet/dist/images/marker-icon-2x.png';\nimport iconUrl from 'leaflet/dist/images/marker-icon.png';\nimport shadowUrl from 'leaflet/dist/images/marker-shadow.png';\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl,\n  iconUrl,\n  shadowUrl,\n});\n\n// Create a map\nconst map = L.map('map');\nmap.attributionControl.setPrefix(\n  '<a href=\"https://github.com/simon04/osm-gadget-leaflet/\" target=\"_blank\">' +\n    '@simon04/osm-gadget-leaflet</a> (GPL v3)'\n);\nnew GeocoderControl({ position: 'topleft' }).addTo(map);\nstate.setMapView(map);\n\n// Prepare WIWOSM layer\nconst wiwosm = new WIWOSM({\n  article: query.get('article'),\n  lang: query.get('lang') || 'en',\n});\n\n// Prepare marks layer\nconst commonsThumbnails = new Mediawiki({\n  url: 'https://commons.wikimedia.org',\n  iconThumbnail: true,\n  gsnamespace: 6,\n});\nconst commons = new Mediawiki({\n  url: 'https://commons.wikimedia.org',\n  icon: {\n    iconUrl:\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Commons-logo-2.svg/20px-Commons-logo-2.svg.png',\n    iconSize: [20, 27],\n  },\n  gsnamespace: 6,\n});\nconst marks = new Mediawiki({\n  url: 'https://' + (query.get('lang') || 'en') + '.wikipedia.org',\n  icon: {\n    iconUrl:\n      'https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikipedia-logo-v2.svg/20px-Wikipedia-logo-v2.svg.png',\n    iconSize: [20, 18],\n  },\n});\n\n// Add layer switcher\nconst maxZoom = 24;\nconst layers = L.control\n  .layers(\n    {\n      Wikimedia: L.tileLayer('https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png', {\n          maxNativeZoom: 19,\n          maxZoom,\n          attribution: '<a href=\"https://wikimediafoundation.org/wiki/Maps_Terms_of_Use\">Wikimedia</a>',\n        })\n        .addTo(map),\n      OpenStreetMap: L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        maxNativeZoom: 19,\n        maxZoom,\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      }),\n      OpenTopoMap: L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\n        maxNativeZoom: 17,\n        maxZoom,\n        attribution: '&copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>), <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      }),\n    },\n    {\n      WIWOSM: wiwosm.addTo(map),\n      'Commons World 🖼': commonsThumbnails.addTo(map),\n      'Commons World': commons,\n      'Wikipedia World': marks.addTo(map).updateMarks(),\n    }\n  )\n  .addTo(map);\n\nif (query.get('lang') === 'de') {\n  layers.addBaseLayer(\n    L.tileLayer('https://{s}.tile.openstreetmap.de/{z}/{x}/{y}.png', {\n      maxNativeZoom: 18,\n      maxZoom,\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    }),\n    'OpenStreetMap.de'\n  );\n}\n\n// Add a km/miles scale\nL.control.scale().addTo(map);\n\nwiwosm.loadWIWOSM();\nwindow.addEventListener('hashchange', function () {\n  L.Util.setOptions(wiwosm, state.getQuery());\n  wiwosm.loadWIWOSM();\n});\nmap.on('zoomend moveend', marks.updateMarks, marks);\nmap.on('zoomend moveend', state.saveMapView, map);\n"],"names":["L.GeoJSON","L.icon","L.marker","L.Util","getFilePath","L.point","L.Projection","L.circleMarker","state.getQuery","L.Icon","L.map","state.setMapView","WIWOSM","Mediawiki","L.control","L.tileLayer","state.saveMapView"],"mappings":"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"}